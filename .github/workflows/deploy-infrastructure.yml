# This is a basic workflow to help you get started with Actions
name: Validate IaC Deployment
defaults:
  run:
    working-directory: terraform/
    
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: 
      - main
    paths: 
      - "terraform/**"      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    
       # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    #--service-principal --username "${ARM_CLIENT_ID}" --password "${ARM_CLIENT_SECRET}" --tenant "${ARM_TENANT_ID}"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
   
      - name: Terraform Init
        id: init 
        run: terraform init -backend-config=storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }} -backend-config=container_name=${{secrets.TFSTATE_STORAGE_CONTAINER_NAME}} -backend-config=key=${{secrets.TFSTATE_KEY}} -backend-config=resource_group_name=${{secrets.TFSTATE_RESOURCES_GROUP_NAME}}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var="location=${{ secrets.LOCATION }}" 
               
  deploy-prod:
    runs-on: 'ubuntu-latest'
    environment: 'Production'
    needs: [build]
    env: 
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          enable-AzPSSession: true
          
      - name: Terraform Init
        id: init 
        run: terraform init -backend-config=storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }} -backend-config=container_name=${{secrets.TFSTATE_STORAGE_CONTAINER_NAME}} -backend-config=key=${{secrets.TFSTATE_KEY}} -backend-config=resource_group_name=${{secrets.TFSTATE_RESOURCES_GROUP_NAME}}

      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve -var="location=${{secrets.LOCATION}}"

